%Hi Guys. Here's a simplified cheatsheet for various items in HCST-R:

HCST log 

https://docs.google.com/document/d/1vYmlUVQCa-d40KFtnjErv_sl9jFLg2ZB7TtUF39gQ88/edit?usp=sharing

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%------------------------------------TTM---------------------------------------%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~General Comments~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%

- Full closed-loop range is 0 - 10 mrad (SVO enabled)

- Full open-loop range is 0 - 15 mrad (SVO disabled)

- Do not attempt to control/communicate with axis 3!!
        This is the 100V reference axis for the stage


%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~PITerminal Control~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%

        %These are instructions for the vendor-supplied GUI, PITerminal%

%~~~Open the GUI and connect to the device~~~%

- In terminal, type "pi_terminal"

- Under the USB or TCP/IP tab, select the device
    hcst-ttm.caltech.edu    % Controller Hostname (IP = 131.215.193.165)
    50000                   % Port

%~~~Commands, in order, to set the device to center of range~~~%

*IDN?                       %Query device info. Serves to check connection

ONL 1 1 2 1                 %Bring channels 1 and 2 online (give comp control)

ONL?                        %Confirm that channels are online

SVO A 1 B 1                 %Activate servos in 1(A) and 2(B)
                                %The servos are the closed loop control
                                
SVO?                        %Confirm closed loop control

MOV A 5 B 5                 %Set TTM to 5 mrad (middle of CL range) on A and B

DCO A 1 B 1                 %Activate drift control (OPTIONAL)
                                %This is an additional control loop for long-
                                %term stability
                                
%~~~Commands, in order, to shutdown the device~~~%

DCO A 0 B 0                 %Disable drift control

SVO A 0 B 0                 %Disable servos (open control loops)

SVA A 0 B 0                 %Set voltage to 0 
                                %NOTE: this is only needed if powering-down the
                                %  controller. This WILL affect alignment.
                                
ONL 1 0 2 0                 %Set channels offline

%~~~Other useful commands~~~%

MOV [Axis] [Pos]            %Perform an absolute move on 'Axis' to 'Pos'

MVR [Axis] [delta]          %Perform a relative move of 'delta' on 'Axis'

POS? [Axis]                 %Query position. NOTE: 'Axis' is optional                     
                                
TMN? [Axis]                 %Query minimum value for MOV. NOTE: 'Axis' optional

TMX? [Axis]                 %Query maximum value for MOV. NOTE: 'Axis' optional

HLP?                        %Display all available commands and arguments

ERR?                        %Return and clear last error
                                %NOTE: error buffer only holds one at a time
                                

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~MATLAB Control~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%
        


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%-----------------------------------CONEX--------------------------------------%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~General Comments~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%

- We are currently using the Conex.py class written for KPIC
    - This allows for simple implementation and management across both systems

- The default Conex range is 0-27 mm

- The default baudrate for the Conexs over USB is 921600


%~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~MATLAB Control~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~%

     %These are instructions for MATLAB control through the Conex.py class%
                           
HCST_lib_PATH = '/home/hcst/HCST_lib';
if count(py.sys.path, HCST_lib_PATH) == 0
    insert(py.sys.path, int32(0), HCST_lib_PATH);
end
                            %Add the directory with all our libraries to the 
                                %Python search path

conxV = py.Conex.Conex_Device('/dev/ttyConexV', 921600)
                            %Instantiate the class for USB control

conxV.open()                %Open comms

conxV.home()                %Home device

conxV.moveAbs(13.2, True)   %Move Absolute

conxV.reqPosAct()           %Check current position

conxV.reset()               %Reset device

py.help(conxV)              %Get help on class and functions

conxV.close()               %Close comms




